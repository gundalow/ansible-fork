---
# ensure logging configs are empty
- name: Remove host logging
  net_logging:
    dest: host
    name: 172.16.0.1
    state: absent
    authorize: yes

- name: Remove console
  net_logging:
    dest: console
    level: warnings
    state: absent
    authorize: yes

- name: Remove buffer
  net_logging:
    dest: buffered
    size: 8000
    authorize: yes
    state: absent

# start tests
- name: Set up host logging
  net_logging:
    dest: host
    name: 172.16.0.1
    facility: local7
    state: present
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"logging host 172.16.0.1" in result.commands'
      - '"logging facility local7" in result.commands'

- name: Set up host logging again (idempotent)
  net_logging:
    dest: host
    name: 172.16.0.1
    state: present
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == false'

- name: Delete/disable host logging
  net_logging:
    dest: host
    name: 172.16.0.1
    state: absent
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"no logging host 172.16.0.1" in result.commands'

- name: Delete/disable host logging (idempotent)
  net_logging:
    dest: host
    name: 172.16.0.1
    state: absent
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == false'

- name: Console logging with level warnings
  net_logging:
    dest: console
    level: warnings
    state: present
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"logging console warnings" in result.commands'

- name: Configure Buffer size
  net_logging:
    dest: buffered
    size: 8000
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"logging buffered 8000" in result.commands'

- name: Change logging parameters using aggregate
  net_logging:
    aggregate:
      - { dest: console, level: notifications }
      - { dest: buffered, size: 9000 }
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"logging buffered 9000" in result.commands'
      - '"logging console notifications" in result.commands'

- name: remove logging as collection tearDown
  net_logging:
    aggregate:
      - { dest: console, level: notifications }
      - { dest: buffered, size: 9000 }
    state: absent
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"no logging console" in result.commands'
      - '"no logging buffered" in result.commands'
